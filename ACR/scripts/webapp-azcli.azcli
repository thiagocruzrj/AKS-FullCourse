# Login on Azure
az login

# Variables
rg=rg-containers
local=eastus
acr=acrakscontainers

# Creating Resource Group
az group create -n $rg -l $local

# Check if the ACR name is already used
az acr check-name -n $acr

# Creating ACR
az acr create -n $acr -g $rg --sku Basic

# Show endpoint
az acr show-endpoints -n $acr

# Enabling the ACR adm account
az acr update -n $acr --admin-enabled true

# Listing ACRs
az acr list -o table

# ACR details
az acr show -n $acr

# Sending images to ACR repository
# Variables
img=site-html

# Dockerfile build
docker build -t $img .

# Tagging image
docker tag $img  $acr.azurecr.io/$img

# Login on ACR
az acr login --name $acr

# Pushing to ACR
docker push $acr.azurecr.io/$img

# Provisioning App Service Plan and App Service for Containers
# Variables
appplan=containers-plan
appservice=appservicecontainerapps

# Create App plan with SKU
az appservice plan create -g $rg -n $appplan --sku S1 -l $local --is-linux

# Create App Service for Containers
az webapp create -g $rg -p $appplan -n $appservice -i $acr.azurecr.io/$img

# Enabling CD
az webapp deployment container config --enable-cd -n $appservice -g $rg

# Showing URL CD
az webapp deployment container show-cd-url -n $appservice -g $rg

# Get the URL to be used to config webhooks to CD
cicdurl=$(az webapp deployment container show-cd-url -n $appservice -g $rg --query CI_CD_URL --output tsv)

# Creating WebHook
webhook=webhookcrlastest

az acr webhook create -n $webhook -r $acr -g $rg --actions push --uri $cicdurl --scope $img

# List Webhook events
az acr webhook list-events -n $webhook -r $acr

# Ping the Webhook
az acr webhook ping -n $webhook -r $acr